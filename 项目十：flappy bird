#include <stdio.h>
#include <stdlib.h>
#include <Windows.h>
#include <conio.h>
// 全局变量
int high, width; // 游戏画⾯⼤⼩
int bird_x, bird_y; // ⼩鸟的坐标
int bar1_y, bar1_xDown, bar1_xTop; // 障碍物
int score; // 得分，经过障碍物的个数
void gotoxy(int x, int y) /* 将光标移动到(x, y)位置 */
{
HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);
COORD pos;
pos.X = x;
pos.Y = y;
SetConsoleCursorPosition(handle, pos);
}
void startup() /* 数据的初始化 */
{
high = 20;
width = 59;
bird_x = 0;
bird_y = width / 3;
bar1_y = width / 2;
bar1_xDown = high / 3;
bar1_xTop = high / 2;
score = 0;
}
void show() /* 显⽰画⾯ */
{
gotoxy(0,0); // 光标移动到原点位置，以下重画清屏
int i, j;
for ( i = 0; i < high; i++ )
{
for ( j = 0; j < width; j ++ )
{
if ( (i == bird_x) && (j == bird_y) )
printf("@"); // 输出⼩鸟
else if ( (j == bar1_y) && ((i < bar1_xDown) || (i > bar1_xTop)) )
printf("*");
else
printf(" "); // 输出空格
}
printf("\n");
}
printf("得分：%d\n", score);
}
void updateWithoutInut() /* 与⽤户⽆关的更新 */
{
bird_x++;
bar1_y--;
if ( (bird_y == bar1_y) )
{
if ( (bird_x >= bar1_xDown) && (bird_x <= bar1_xTop) )
score++;
else
{
printf("游戏失败\n");
system("pause");
exit(EXIT_FAILURE);
}
}
if ( bar1_y <= 0 ) //重新⽣成新的障碍物
{
bar1_y = width;
int temp = rand() % (int)(high * 0.8);
bar1_xDown = temp - high / 10;
bar1_xTop = temp + high / 10;
}
}
void updateWithInput()
{
char input;
if ( kbhit() ) // 判断是否有输⼊
{
input = getch(); // 根据⽤户的不同输⼊来移动，不必输⼊回车
if ( input == ' ' )
{
bird_x = bird_x - 2;
}
}
}
int main(void)
{
startup();
while ( 1 )
{
show(); // 显⽰画⾯
updateWithoutInut(); // 与⽤户输⼊⽆关的更新
updateWithInput(); // 与⽤户输⼊有关的更新
}
return 0;
}
