#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <Windows.h>
#include <time.h>
#define HIGH 25 // 游戏画⾯尺⼨
#define WIDTH 50
//全局变量
int cells[HIGH][WIDTH]; // 所有位置细胞⽣1或死0
void gotoxy(int x, int y) /* 将光标移动到(x,y)位置 */
{
HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);
COORD pos;
pos.X = x;
pos.Y = y;
SetConsoleCursorPosition(handle, pos);
}// 替代system("cls")清屏函数
void startup()
{
int i, j;
for ( i = 0; i < HIGH; i++ )
{
for ( j = 0; j < WIDTH; j++ )
{
cells[i][j] = 1;
}
}
}
void show() /* 显⽰画⾯ */
{
gotoxy(0,0); // 光标移动到原点位置，以下重画清屏
int i, j;
for ( i = 0; i < HIGH; i++ )
{
for ( j = 0; j < WIDTH; j++ )
{
if ( cells[i][j] == 1 )
printf("*"); // 输出活的细胞
else
printf(" "); // 输出空格
}
printf("\n");
}
Sleep(50);
}
void updateWithoutInput() /* 与⽤户输⼊⽆关的更新 */
{
int NewCells[HIGH][WIDTH]; // 下⼀帧的细胞情况
int NeibourNumber; // 统计邻居的个数
int i, j;
for ( i = 1; i <= HIGH - 1; i++ )
{
for ( j = 1; j <= WIDTH - 1; j++ )
{
NeibourNumber = cells[i - 1][j - 1] + cells[i - 1][j] + cells[i - 1][j + 1]
+cells[i][j - 1] + cells[i][j + 1] + cells[i + 1][j - 1] + cells[i + 1][j]
+ cells[i + 1][j + 1];
if ( NeibourNumber == 3 )
NewCells[i][j] = 1;
else if ( NeibourNumber == 2 )
NewCells[i][j] == cells[i][j];
else
NewCells[i][j] = 0;
}
}
for ( i = 1; i <= HIGH - 1; i++ )
{
for ( j = 1; j <= WIDTH - 1; j++ )
cells[i][j] = NewCells[i][j];
}
}
void updateWithInput()
{
}
int main(void)
{
startup();
while ( 1 )
{
show();
updateWithoutInput();
updateWithInput();
}
return 0;
}
